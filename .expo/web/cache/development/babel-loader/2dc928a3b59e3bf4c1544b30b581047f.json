{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nvar DatabaseReference = null;\nexport function provideReferenceClass(databaseReference) {\n  DatabaseReference = databaseReference;\n}\n\nvar DatabaseThenableReference = function () {\n  function DatabaseThenableReference(database, path, promise) {\n    _classCallCheck(this, DatabaseThenableReference);\n\n    this._ref = new DatabaseReference(database, path);\n    this._promise = promise;\n    return new Proxy(this, {\n      get: function get(target, prop) {\n        if (prop === 'then' || prop === 'catch') {\n          return target[prop];\n        }\n\n        return target._ref[prop];\n      }\n    });\n  }\n\n  _createClass(DatabaseThenableReference, [{\n    key: \"then\",\n    get: function get() {\n      return this._promise.then.bind(this._promise);\n    }\n  }, {\n    key: \"catch\",\n    get: function get() {\n      return this._promise.catch.bind(this._promise);\n    }\n  }]);\n\n  return DatabaseThenableReference;\n}();\n\nexport { DatabaseThenableReference as default };","map":{"version":3,"sources":["C:/Users/Dell/hackathon/system_campus/node_modules/@react-native-firebase/database/lib/DatabaseThenableReference.js"],"names":["DatabaseReference","provideReferenceClass","databaseReference","DatabaseThenableReference","database","path","promise","_ref","_promise","Proxy","get","target","prop","then","bind","catch"],"mappings":";;AAkBA,IAAIA,iBAAiB,GAAG,IAAxB;AACA,OAAO,SAASC,qBAAT,CAA+BC,iBAA/B,EAAkD;AACvDF,EAAAA,iBAAiB,GAAGE,iBAApB;AACD;;IAEoBC,yB;AACnB,qCAAYC,QAAZ,EAAsBC,IAAtB,EAA4BC,OAA5B,EAAqC;AAAA;;AACnC,SAAKC,IAAL,GAAY,IAAIP,iBAAJ,CAAsBI,QAAtB,EAAgCC,IAAhC,CAAZ;AACA,SAAKG,QAAL,GAAgBF,OAAhB;AAEA,WAAO,IAAIG,KAAJ,CAAU,IAAV,EAAgB;AACrBC,MAAAA,GADqB,eACjBC,MADiB,EACTC,IADS,EACH;AAChB,YAAIA,IAAI,KAAK,MAAT,IAAmBA,IAAI,KAAK,OAAhC,EAAyC;AACvC,iBAAOD,MAAM,CAACC,IAAD,CAAb;AACD;;AAED,eAAOD,MAAM,CAACJ,IAAP,CAAYK,IAAZ,CAAP;AACD;AAPoB,KAAhB,CAAP;AASD;;;;wBAEU;AACT,aAAO,KAAKJ,QAAL,CAAcK,IAAd,CAAmBC,IAAnB,CAAwB,KAAKN,QAA7B,CAAP;AACD;;;wBAEW;AACV,aAAO,KAAKA,QAAL,CAAcO,KAAd,CAAoBD,IAApB,CAAyB,KAAKN,QAA9B,CAAP;AACD;;;;;;SAtBkBL,yB","sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n// To avoid React Native require cycle warnings\nlet DatabaseReference = null;\nexport function provideReferenceClass(databaseReference) {\n  DatabaseReference = databaseReference;\n}\n\nexport default class DatabaseThenableReference {\n  constructor(database, path, promise) {\n    this._ref = new DatabaseReference(database, path);\n    this._promise = promise;\n\n    return new Proxy(this, {\n      get(target, prop) {\n        if (prop === 'then' || prop === 'catch') {\n          return target[prop];\n        }\n\n        return target._ref[prop];\n      },\n    });\n  }\n\n  get then() {\n    return this._promise.then.bind(this._promise);\n  }\n\n  get catch() {\n    return this._promise.catch.bind(this._promise);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}