{"ast":null,"code":"import { isArray, isObject } from \"./validate\";\nexport function deepGet(object, path) {\n  var joiner = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '/';\n\n  if (!isObject(object) && !Array.isArray(object)) {\n    return undefined;\n  }\n\n  var keys = path.split(joiner);\n  var i = 0;\n  var tmp = object;\n  var len = keys.length;\n\n  while (i < len) {\n    var key = keys[i++];\n\n    if (!tmp || !Object.hasOwnProperty.call(tmp, key)) {\n      return undefined;\n    }\n\n    tmp = tmp[key];\n  }\n\n  return tmp;\n}\nexport function deepSet(object, path, value) {\n  var initPaths = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  var joiner = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '.';\n\n  if (!isObject(object)) {\n    return false;\n  }\n\n  var keys = path.split(joiner);\n  var i = 0;\n  var _object = object;\n  var len = keys.length - 1;\n\n  while (i < len) {\n    var key = keys[i++];\n\n    if (initPaths && !Object.hasOwnProperty.call(object, key)) {\n      _object[key] = {};\n    }\n\n    _object = _object[key];\n  }\n\n  if (isObject(_object) || isArray(_object) && !Number.isNaN(keys[i])) {\n    _object[keys[i]] = value;\n  } else {\n    return false;\n  }\n\n  return true;\n}","map":{"version":3,"sources":["C:/Users/Dell/hackathon/system_campus/node_modules/@react-native-firebase/app/lib/common/deeps.js"],"names":["isArray","isObject","deepGet","object","path","joiner","Array","undefined","keys","split","i","tmp","len","length","key","Object","hasOwnProperty","call","deepSet","value","initPaths","_object","Number","isNaN"],"mappings":"AAiBA,SAASA,OAAT,EAAkBC,QAAlB;AAUA,OAAO,SAASC,OAAT,CAAiBC,MAAjB,EAAyBC,IAAzB,EAA6C;AAAA,MAAdC,MAAc,uEAAL,GAAK;;AAClD,MAAI,CAACJ,QAAQ,CAACE,MAAD,CAAT,IAAqB,CAACG,KAAK,CAACN,OAAN,CAAcG,MAAd,CAA1B,EAAiD;AAC/C,WAAOI,SAAP;AACD;;AACD,MAAMC,IAAI,GAAGJ,IAAI,CAACK,KAAL,CAAWJ,MAAX,CAAb;AAEA,MAAIK,CAAC,GAAG,CAAR;AACA,MAAIC,GAAG,GAAGR,MAAV;AACA,MAAMS,GAAG,GAAGJ,IAAI,CAACK,MAAjB;;AAEA,SAAOH,CAAC,GAAGE,GAAX,EAAgB;AACd,QAAME,GAAG,GAAGN,IAAI,CAACE,CAAC,EAAF,CAAhB;;AACA,QAAI,CAACC,GAAD,IAAQ,CAACI,MAAM,CAACC,cAAP,CAAsBC,IAAtB,CAA2BN,GAA3B,EAAgCG,GAAhC,CAAb,EAAmD;AACjD,aAAOP,SAAP;AACD;;AACDI,IAAAA,GAAG,GAAGA,GAAG,CAACG,GAAD,CAAT;AACD;;AAED,SAAOH,GAAP;AACD;AAUD,OAAO,SAASO,OAAT,CAAiBf,MAAjB,EAAyBC,IAAzB,EAA+Be,KAA/B,EAAsE;AAAA,MAAhCC,SAAgC,uEAApB,IAAoB;AAAA,MAAdf,MAAc,uEAAL,GAAK;;AAC3E,MAAI,CAACJ,QAAQ,CAACE,MAAD,CAAb,EAAuB;AACrB,WAAO,KAAP;AACD;;AACD,MAAMK,IAAI,GAAGJ,IAAI,CAACK,KAAL,CAAWJ,MAAX,CAAb;AAEA,MAAIK,CAAC,GAAG,CAAR;AACA,MAAIW,OAAO,GAAGlB,MAAd;AACA,MAAMS,GAAG,GAAGJ,IAAI,CAACK,MAAL,GAAc,CAA1B;;AAEA,SAAOH,CAAC,GAAGE,GAAX,EAAgB;AACd,QAAME,GAAG,GAAGN,IAAI,CAACE,CAAC,EAAF,CAAhB;;AACA,QAAIU,SAAS,IAAI,CAACL,MAAM,CAACC,cAAP,CAAsBC,IAAtB,CAA2Bd,MAA3B,EAAmCW,GAAnC,CAAlB,EAA2D;AACzDO,MAAAA,OAAO,CAACP,GAAD,CAAP,GAAe,EAAf;AACD;;AACDO,IAAAA,OAAO,GAAGA,OAAO,CAACP,GAAD,CAAjB;AACD;;AAED,MAAIb,QAAQ,CAACoB,OAAD,CAAR,IAAsBrB,OAAO,CAACqB,OAAD,CAAP,IAAoB,CAACC,MAAM,CAACC,KAAP,CAAaf,IAAI,CAACE,CAAD,CAAjB,CAA/C,EAAuE;AACrEW,IAAAA,OAAO,CAACb,IAAI,CAACE,CAAD,CAAL,CAAP,GAAmBS,KAAnB;AACD,GAFD,MAEO;AACL,WAAO,KAAP;AACD;;AAED,SAAO,IAAP;AACD","sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isArray, isObject } from './validate';\n\n/**\n * Deep get a value from an object.\n * @website https://github.com/Salakar/deeps\n * @param object\n * @param path\n * @param joiner\n * @returns {*}\n */\nexport function deepGet(object, path, joiner = '/') {\n  if (!isObject(object) && !Array.isArray(object)) {\n    return undefined;\n  }\n  const keys = path.split(joiner);\n\n  let i = 0;\n  let tmp = object;\n  const len = keys.length;\n\n  while (i < len) {\n    const key = keys[i++];\n    if (!tmp || !Object.hasOwnProperty.call(tmp, key)) {\n      return undefined;\n    }\n    tmp = tmp[key];\n  }\n\n  return tmp;\n}\n\n/**\n * Deep set a value\n * @param object\n * @param path\n * @param value\n * @param initPaths\n * @param joiner\n */\nexport function deepSet(object, path, value, initPaths = true, joiner = '.') {\n  if (!isObject(object)) {\n    return false;\n  }\n  const keys = path.split(joiner);\n\n  let i = 0;\n  let _object = object;\n  const len = keys.length - 1;\n\n  while (i < len) {\n    const key = keys[i++];\n    if (initPaths && !Object.hasOwnProperty.call(object, key)) {\n      _object[key] = {};\n    }\n    _object = _object[key];\n  }\n\n  if (isObject(_object) || (isArray(_object) && !Number.isNaN(keys[i]))) {\n    _object[keys[i]] = value;\n  } else {\n    return false;\n  }\n\n  return true;\n}\n"]},"metadata":{},"sourceType":"module"}